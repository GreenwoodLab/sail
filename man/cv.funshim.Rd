% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models.R
\name{cv.funshim}
\alias{cv.funshim}
\title{Cross-validation for shim}
\usage{
cv.funshim(x, y, e, df, weights, lambda.beta = NULL, lambda.gamma = NULL,
  nlambda.gamma = 10, nlambda.beta = 10, nlambda = 100, parallel = TRUE,
  type.measure = c("mse"), cores = 6, nfolds = 10, ...)
}
\arguments{
\item{parallel}{If \code{TRUE}, use parallel \code{foreach} to fit each fold.
Must register parallel before hand using the
\code{\link[doMC]{registerDoMC}} function from the \code{doMC} package. See
the example below for details.}

\item{type.measure}{loss to use for cross-validation. Currently only 1
option. The default is \code{type.measure="mse"}, which uses squared-error
for gaussian models}

\item{nfolds}{number of folds - default is 10. Although nfolds can be as
large as the sample size (leave-one-out CV), it is not recommended for
large datasets. Smallest value allowable is \code{nfolds=3}}
}
\description{
Does k-fold cross-validation for shim and determines the optimal
  pair of tuning parameters (\eqn{\lambda_\beta} and \eqn{\lambda_\gamma})
}
\details{
The function runs shim nfolds+1 times; the first to get the tuning
  parameter sequences, and then the remainder to compute the fit with each of
  the folds omitted. The error is accumulated, and the average error and
  standard deviation over the folds is computed. Note also that the results
  of cv.shim are random, since the folds are selected at random using the
  \code{\link{createfolds}} function. Users can reduce this randomness by
  running cv.shim many times, and averaging the error curves.
}
\author{
Sahir Bhatnagar

  Maintainer: Sahir Bhatnagar \email{sahir.bhatnagar@mail.mcgill.ca}
}
